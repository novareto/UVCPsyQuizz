<form id="result" method="POST"
      tal:attributes="action view.url(context) + '/pdf'">

  <div class="panel" tal:define="data dict(view.display());">
    
    <div tal:repeat="qname data.keys()" 
	 tal:attributes="id qname;
	     class repeat['qname'].start and 'collapse in' or 'collapse'">

      <h2>
	Anzahl ausgefüllte Fragebögen :
	<span tal:content="data[qname]['total']" />
      </h2>
            
      <input type="submit" class="btn btn-primary" value="Als PDF exportieren" />
      <tal:chart condition="data[qname]['chart'] is not None">
	<textarea type="text" id="chart" name="chart" style="display: none"></textarea>
	<canvas id="myChart" width="800" height="400"></canvas>

  <div class="legend" style="width: 550px; margin: 0 auto 5em auto; text-align: center; border: 2px solid #666;">
    <em><b style="color: #62B645;">> 3,5</b>: in diesem Bereich scheint alles in Ordnung</em><br>
    <em><b style="color: #FFCC00;">> 2,5 < 3,5</b>: diesen Bereich sollten Sie sich noch mal genauer ansehen</em><br>
    <em><b style="color: #D8262B;"> < 2,5  </b>: in diesem Bereich scheint Handlungsbedarf zu bestehen </em>&nbsp;&nbsp;
  </div>

	<script language="Javascript"
                tal:define="length len(data[qname]['chart'].keys())">
	  // Get the context of the canvas element we want to select

	  var data = {
	  labels: <span tal:replace="[k.encode('iso-8859-1') for k in data[qname]['chart'].keys()]" />,
	  datasets: [
	  {
	      fillColor: "#62B645",
	      strokeColor: "rgba(120,120,120,0)",
	      pointStrokeColor: "transparent",
              pointColor: "rgba(120,120,120,0)",
              data: <span tal:replace="[5] * length" />
          },
          {
	      fillColor: "#FFCC00",
	      strokeColor: "rgba(120,120,120,0)",
	      pointStrokeColor: "transparent",
              pointColor: "rgba(120,120,120,0)",
              data: <span tal:replace="[3.5] * length" />
          },
          {
	      fillColor: "#D8262B",
	      strokeColor: "rgba(120,120,120,0)",
	      pointStrokeColor: "transparent",
              pointColor: "rgba(120,120,120,0)",
              data: <span tal:replace="[2.5] * length" />
          },
          {
	  scaleShowLine : true,
	  scaleBeginAtZero : true,
	  scaleBeginAtZero: true,
	  graphMin : 1,
	  graphMax : 5,
	  scaleShowGridLines: true,
	  scaleGridLineWidth: 1,
          label: "My First dataset",
          fillColor: "rgba(255,255,255,0)",
          strokeColor: "rgba(0,0,0,1)",
          pointColor: "rgba(0,0,0,1)",
          pointStrokeColor: "#000",
          pointHighlightFill: "#000",
          pointHighlightStroke: "rgba(220,220,220,1)",
          data: <span tal:replace="[v['avg'] for v in data[qname]['chart'].values()]" />
          },
	  ]
	  };

          var opt = {
            legend : true,
	    showSingleValue : true,
	    responsive: false,
	    scaleShowLabelBackdrop: true,
	    scaleShowLabels: false,
	    scaleShowLine: true,
	    scaleBeginAtZero: true,
	    graphMin: 1,
	    graphMax: 5,
	    bezierCurve: false,
            onAnimationComplete: done,
	  }

	  var ctx = document.getElementById("myChart").getContext("2d");
	  myChart = new Chart(ctx).Radar(data, opt);

	  function done() {
	     var url = document.getElementById("myChart").toDataURL();
	     document.getElementById("chart").value = url;
	  }
	  
	</script>
      </tal:chart>
      <p class="lead">Verteilung der Antworten</p>
<p>Hier sehen Sie zusätzlich die Verteilung der Antworten. Bei Auffälligen Verteilungen z.B. 50% der Beschäftigten antworten sehr positiv, 
50% sehr negativ sollten Sie sich diesen Bereich trotz eines unauffälligen Mittelwertes noch einmal genauer anschauen.</p>

<tal:users condition="data[qname]['users'] is not None">

    <textarea type="text" id="averages" name="averages" style="display:none">
      <tal:data
           content="view.jsonify(dict((res[0], '%.2f' % view.avg(res[1])) for res in data[qname]['users'].items()))" />
    </textarea>
  
      <table class="table table-bordered table-stripped">
	<tr tal:repeat="res data[qname]['users'].items()">
	  <th tal:content="res[0]" />
	  <td tal:content="'%.2f' % view.avg(res[1])" />
	</tr>
      </table>

  
	<textarea type="text" id="userschart" name="userschart" style="display: none"></textarea>
        <canvas id="myUsersChart" width="800" height="800"></canvas>
	
        <script language="Javascript">
          // Get the context of the canvas element we want to select

	    var data = {
	      labels: <span tal:replace="[k.encode('iso-8859-1') for k in reversed(data[qname]['users'].keys())]" />,
	      datasets: [
              {
              title: "+",
              fillColor: "<tal:color content="view.colors[1]" />",
              strokeColor: "rgba(120,120,120,1)",
              pointColor: "rgba(120,120,120,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(220,220,220,1)",
              data: <span tal:replace="[v[1] + v[2] for v in reversed(data[qname]['users'].values())]" />
              },
              {
              title: "+ / -",
              fillColor: "<tal:color content="view.colors[3]" />",
              strokeColor: "rgba(120,120,120,1)",
              pointColor: "rgba(120,120,120,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(220,220,220,1)",
              data: <span tal:replace="[v[3] for v in reversed(data[qname]['users'].values())]" />
              },
	      {
              title: "-",
              fillColor: "<tal:color content="view.colors[5]" />",
              strokeColor: "rgba(120,120,120,1)",
              pointColor: "rgba(120,120,120,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(220,220,220,1)",
              data: <span tal:replace="[v[4] + v[5] for v in reversed(data[qname]['users'].values())]" />
              },
	      ]
          };

          var ctx = document.getElementById("myUsersChart").getContext("2d");
	  var opt = {
	    legend : true,
	    responsive: false,
	    scaleOverride : true,
  	    scaleStartValue : 0,
  	    scaleSteps : 5,
  	    scaleStepWidth : 20,
            scaleShowLabels: true,
            scaleLabel: "<%=value%>",
	    bezierCurve : false,
            onAnimationComplete: done
	    };

          var myNewChart = new Chart(ctx).HorizontalStackedBar(data, opt);

	  function done() {
	     var url = document.getElementById("myUsersChart").toDataURL();
	     document.getElementById("userschart").value = url;
	  }
        </script>
      </tal:users>

    </div>

  </div>
</form>
